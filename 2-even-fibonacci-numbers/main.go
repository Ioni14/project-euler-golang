package main

import (
	"fmt"
)

// iterative fibonacci
func naive(max int) (evenSum int) {
	for a, b := 0, 1; a + b <= max; {
		n := a + b

		if n % 2 == 0 {
			evenSum += n
		}

		a = b
		b = n
	}
	return
}

/*
source : https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
func main() {
	res := naive(4000000)
	fmt.Println(res)
}
